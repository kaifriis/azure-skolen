# Name of the workflow - this appears in the GitHub Actions UI
name: Azure Login

# Defines when this workflow can be triggered
on:
  workflow_dispatch:  # Allows manual triggering from GitHub UI
  workflow_call:      # Allows this workflow to be called by other workflows

# Security permissions needed for Azure authentication
permissions:
  id-token: write    # Required for Azure OIDC authentication
  contents: read     # Needed to read repository contents

jobs:
  login:
    runs-on: ubuntu-latest     # Specifies the type of virtual machine to run on
    environment: TEST          # Links to GitHub Environment named 'TEST' with its secrets

    steps:
    # Clear any existing Azure credentials to ensure clean authentication
    - name: Clear Azure CLI Account
      run: |
        az account clear
    
    # Check out the repository code - needed for accessing workflow files
    - name: Checkout
      uses: actions/checkout@v2

    # Authenticate with Azure using OIDC (OpenID Connect)
    # This is more secure than using traditional service principal secrets
    - name: Azure Login
      uses: azure/login@v1
      with:
        # These secrets should be configured in your GitHub Environment
        client-id: ${{ secrets.AZURE_CLIENT_ID }}         # Azure AD application ID
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}         # Azure AD tenant ID
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} # Azure subscription ID

    # Verify the Azure connection was successful
    # Useful for debugging and confirming authentication worked
    - name: Test Azure Connection
      run: |
        echo "Running in environment: ${{ env.ENVIRONMENT }}"
        az account show