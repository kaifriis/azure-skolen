# Workflow name - appears in GitHub Actions UI
name: Build and Deploy .NET Web App

# Define when this workflow should run
on:
  push:
    branches:
      - '**'  # Triggers on push to any branch - useful for development
  workflow_dispatch:  # Enables manual trigger from GitHub UI - helpful for testing

# Jobs are the main building blocks of a workflow
jobs:
  build:
    # Specifies the type of runner to execute the job
    runs-on: ubuntu-latest

    # Sequential steps to be executed as part of the job
    steps:
    # Check out your repository code to the runner
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up .NET SDK environment
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'  # Specifies .NET 8 version

    # Set up Node.js for frontend dependencies
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # Install frontend dependencies from package.json
    - name: Install npm packages
      working-directory: ./AzureWorkshopApp  # Changes directory to where package.json is located
      run: npm install

    # Restore .NET project dependencies
    - name: Restore dependencies
      run: dotnet restore

    # Build the .NET project in Release mode
    - name: Build
      run: dotnet build --configuration Release --no-restore  # --no-restore skips restore since we already did it

    # Publish the application - creates deployment-ready files
    - name: Publish
      run: dotnet publish ./AzureWorkshopApp/AzureWorkshopApp.csproj --configuration Release --output ./publish --no-build

    # Upload the published app as an artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v4  # v4 is the latest version as of 2024
      with:
        name: dotnet-app  # Name of the artifact in GitHub
        path: ./publish   # Directory containing files to upload