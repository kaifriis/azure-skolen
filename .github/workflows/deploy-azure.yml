name: Deploy to Azure

on:
  release:
    types: [published]
  workflow_dispatch: 
  workflow_call:
    inputs:
      releaseType:
        description: 'Where to release (test or prod)?'
        type: string
        required: true
        default: 'test'
      webapp_secret_name:
        description: 'Name of the secret containing webapp name'
        type: string
        required: true
        default: 'TEST_WEBAPP_NAME'

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy to ${{ inputs.releaseType }}
    environment: ${{ inputs.releaseType }}
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build and Test
        working-directory: ./AzureWorkshopApp
        run: |
          dotnet restore
          npm install dropzone @types/dropzone
          dotnet build --configuration Release --no-restore
          dotnet test ../AzureWorkshopAppTests/AzureWorkshopAppTests.csproj --no-restore --verbosity normal
        
      - name: Publish
        working-directory: ./AzureWorkshopApp
        run: |
          dotnet publish --configuration Release --no-build --output ${{ github.workspace }}/publish
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Deploy Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: app${{ secrets[inputs.webapp_secret_name] }}
          package: ${{ github.workspace }}/publish
            
      - name: Health Check
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://app${{ secrets[inputs.webapp_secret_name] }}.azurewebsites.net/health)
          if [ "$RESPONSE" != "200" ]; then
            echo "Health check failed with status $RESPONSE"
            exit 1
